<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>