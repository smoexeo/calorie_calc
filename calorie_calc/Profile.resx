<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>